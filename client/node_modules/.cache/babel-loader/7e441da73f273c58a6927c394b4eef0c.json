{"ast":null,"code":"import _objectSpread from \"/Users/MX/Desktop/GoogleBooksSearch/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/MX/Desktop/GoogleBooksSearch/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/MX/Desktop/GoogleBooksSearch/client/src/pages/Display.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport axios from \"axios\";\n\nfunction Books() {\n  var _this = this;\n\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formObject = _useState4[0],\n      setFormObject = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      search = _useState6[0],\n      setSearch = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchResults = _useState8[0],\n      setSearchResults = _useState8[1]; // Load all books and store them with setBooks\n\n\n  useEffect(function () {\n    loadBooks();\n  }, []);\n  useEffect(function () {\n    axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + search).then(function (resp) {\n      return setSearchResults(resp.data.items);\n    });\n  }, []); // Loads all books and sets them to books\n\n  function loadBooks() {\n    API.getBooks().then(function (res) {\n      setBooks(res.data);\n      console.log(res);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ; // Deletes a book from the database with a given id, then reloads books from the db\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(function (res) {\n      return loadBooks();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setFormObject(_objectSpread(_objectSpread({}, formObject), {}, {\n      [name]: value\n    }));\n  }\n\n  ; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title) {\n      API.saveBook({\n        title: formObject.title,\n        author: formObject.author,\n        synopsis: formObject.synopsis\n      }).then(function (res) {\n        return loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }\n\n  ; // console.log(typeof books)\n\n  console.log(searchResults);\n  console.log(books);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Books On My List\")), books.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, books.map(function (book) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: book._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/books/\" + book._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 23\n      }\n    }, book.title, \" by \", book.author, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, book.synopsis))), /*#__PURE__*/React.createElement(DeleteBtn, {\n      onClick: function onClick() {\n        return deleteBook(book._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"No Results to Display\"))));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/MX/Desktop/GoogleBooksSearch/client/src/pages/Display.js"],"names":["React","useState","useEffect","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","axios","Books","books","setBooks","formObject","setFormObject","search","setSearch","searchResults","setSearchResults","loadBooks","get","then","resp","data","items","getBooks","res","console","log","catch","err","deleteBook","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","title","saveBook","author","synopsis","length","map","book","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport axios from \"axios\";\n\nfunction Books() {\n  // Setting our component's initial state\n  const [books, setBooks] = useState([])\n  const [formObject, setFormObject] = useState({})\n  const [search, setSearch] = useState(\"\")\n  const [searchResults, setSearchResults] = useState([])\n  // Load all books and store them with setBooks\n  useEffect(() => {\n    loadBooks()\n  }, [])\n\n  useEffect( () => {\n    axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + search)\n    .then(resp => setSearchResults(resp.data.items))\n    \n  }, [])\n\n  // Loads all books and sets them to books\n  function loadBooks() {\n    API.getBooks()\n      .then(res => \n        {setBooks(res.data)\n        console.log(res)}\n      )\n      .catch(err => console.log(err));\n  };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  function deleteBook(id) {\n    API.deleteBook(id)\n      .then(res => loadBooks())\n      .catch(err => console.log(err));\n  }\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  };\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.title) {\n      API.saveBook({\n        title: formObject.title,\n        author: formObject.author,\n        synopsis: formObject.synopsis\n      })\n        .then(res => loadBooks())\n        .catch(err => console.log(err));\n    }\n  };\n  // console.log(typeof books)\n  console.log(searchResults)\n  console.log(books)\n    return (\n      \n      <Container fluid>\n        <Row>\n          <Col size=\"md-12 sm-12\">\n            <Jumbotron>\n              <h3>Books On My List</h3>\n            </Jumbotron>\n            {books.length ? (\n              <List>\n                {books.map (book => (\n                  \n                  <ListItem key={book._id}>\n                    <Link to={\"/books/\" + book._id}>\n                      <strong>\n                        {book.title} by {book.author}\n                        <p>{book.synopsis}</p>\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => deleteBook(book._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}